@model Models.Entities.PlotModel;
@{
    ViewData["Title"] = "Home Page";
    var message = ViewData["Message"] as string;
    var plots = ViewData["plots"] as List<PlotModel>;
}
<script>
let map;
let plots;

window.onload = async function() {
    initialize();
}

function goToPopUp(longitude, latitude) {
    map.setView([longitude, latitude], 18);
}

async function initialize() {
    map = new L.map('map').setView([50.041187, 21.999121], 18);

    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        maxZoom: 19,
        attribution: '© OpenStreetMap'
    }).addTo(map);
}

async function getPlots(){
    let plotsArea = 0;

    plots = await fetch("/plots").then(response => response.json()).then(data => { 
        data.forEach(plot => {
            var marker = new L.marker([plot.longitude, plot.latitude]).bindPopup(`${plot.city} ${plot.plotNumber} ${plot.area}ha`).addTo(map);

            const plotArea = parseFloat(plot.area);
            if(plotArea !== NaN){
                plotsArea += plotArea; 
            };

            const d = document.createElement("div");
            d.classList.add("plotListItemStyle");
            d.addEventListener("click", (() => goToPopUp(plot.longitude, plot.latitude)));
        d.innerHTML = `<form class="d-flex; justify-content-between" method="post" action="/plot/${plot.id}"><div>${plot.city}</div>
         
        <div>${plot.plotNumber}</div><div>${plot.area} ha</div><button type="submit" class="btn-sm btn-danger">Delete</button></form><a href="/plot/edit/${plot.id}"></a>`;
        document.querySelector(".userPlots").appendChild(d);
            goToPopUp(plot.longitude, plot.latitude);
        })
    }).catch(error => console.error("Unable to get items.", error));

document.querySelector(".plotsArea").textContent = plotsArea;
}
function showForm() {
    document.querySelector(".plotForm").classList.toggle("hidden");
}
</script>


<section class="d-flex justify-content-center align-items-md-start">
    @if (User?.Identity?.IsAuthenticated??false)
 {

     <div style="width: 100%;">
                <button class="btn btn-outline-primary showFormButton" onclick="showForm">Add plot</button>

	<nav class="flex-column plotForm hidden">
		<div class="nav-item px-3">
			<div class="d-flex flex-column gap-2">

				<form method="post" action="/plot">

				<div class="form-group">
					<label for="city" class="text-white">Miejscowość</label>
					<input type="text" class="form-control" id="city" placeholder="Kraczkowa" name="City">
				</div>
				<div class="form-group">
					<label for="plotNumber" class="text-white">Numer działki</label>
					<input type="text" class="form-control" id="plotNumber" placeholder="3374/16" name="PlotNumber">
				</div>
				<div class="form-group">
					<label for="area" class="text-white">Powierzchnia (ha)</label>
					<input type="text" class="form-control" id="area" placeholder="0.55" name="Area">
				</div>
				<button type="submit" class="btn btn-primary my-2 align-self-center w-100" >Dodaj działkę</button>
				</form>
			</div>
		</div>
	</nav>
<div class="userPlots">

</div>
<div>
    <div >Area <span class="plotsArea"></span> ha</div>
</div>
</div>
}
<div class="text-center">
    Welcome to your new app.
    <div id="map"></div>
</div>
 </section>

 @if (User?.Identity?.IsAuthenticated == true)
 {
     <script type="text/javascript">
        setTimeout(() => { getPlots(); }, 1000);
        document.querySelector(".showFormButton").addEventListener("click", showForm);
     </script>
 }

 

<style>
    .plotListItemStyle form{
        display: flex;
        gap: 10px;
        align-items: center;
        justify-content: center;
        margin: 5px;
        padding: 5px;
        border: 1px solid black;
        cursor: pointer;
    }
    #map{
        width: 70vw;
        height: 80vh;
    }
    .hidden{
        display:none;
    }
</style>