@model Models.Entities.PlotModel;
@{
    ViewData["Title"] = "Home Page";
    var message = ViewData["Message"] as string;
    var plots = ViewData["plots"] as List<PlotModel>;
}
<script>
let map;
let plots;

window.onload = async function() {
    initialize();
}

function goToPopUp(longitude, latitude) {
    map.setView([longitude, latitude], 18);
}

async function initialize() {
    map = new L.map('map').setView([50.041187, 21.999121], 18);

    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        maxZoom: 19,
        attribution: '© OpenStreetMap'
    }).addTo(map);
}

function plotEditToggle (plot){
    console.log(plots);
        document.querySelector(".modalBackground").classList.toggle("hidden");
        const modal = document.querySelector(".modalForm");
        modal.innerHTML = "";
        const modalView = `<form class="" method="post" action="/plot/${plot.id}/edit">

				<div class="form-group">
					<label for="city" class="text-black">Miejscowość</label>
					<input type="text" class="form-control" id="city" name="City" value="${plot.city}">
				</div>
				<div class="form-group">
					<label for="plotNumber" class="text-black">Numer działki</label>
					<input type="text" class="form-control" id="plotNumber" value="${plot.plotNumber}" name="PlotNumber">
				</div>
				<div class="form-group">
					<label for="area" class="text-black">Powierzchnia (ha)</label>
					<input type="text" class="form-control" id="area" value="${plot.area}" name="Area">
				</div>
                <div class="form-group">
					<label for="area" class="text-black">Uprawa</label>
					<input type="text" class="form-control" id="tillage" value="${plot.tillage}" name="tillage">
				</div>
				<button type="submit" class="btn btn-primary my-2 align-self-center w-100" >Zapisz</button>
				</form>`
            modal.appendChild(modalView);
}

async function getPlots(searchText){
    if(!searchText){
        searchText = "";
    }
    plots = await fetch(`/plots?searchText=${searchText}`).then(response => response.json()).then(data => { 
        let areaSum = 0;
        const plotTable = document.querySelector(".userPlots");
        plotTable.innerHTML = "";

        data.forEach(function(plot, idx) {
            // Create marker
            var marker = new L.marker([plot.longitude, plot.latitude])
            .bindPopup(`<div class="text-center">${plot.city} ${plot.plotNumber} <br> ${plot.tillage} <br> ${plot.area}ha</div>`).addTo(map);

            const plotArea = parseFloat(plot.area);
            if(plotArea !== NaN){
                  areaSum += plotArea;
            };

            // Create table row with plot
            const plotRow = document.createElement("tr");
            plotRow.classList.add("plotListItemStyle");
            plotRow.addEventListener("click", (() => goToPopUp(plot.longitude, plot.latitude)));

            plotRow.innerHTML = `
              <th class="align-middle" scope="row">${idx + 1}</th>
              <td class="align-middle">${plot.city}</td>
              <td class="align-middle">${plot.plotNumber}</td>
              <td class="align-middle">${plot.area}</td>
              <td class="align-middle">${plot.tillage}</td>
              <td class="align-middle">
                <form class="d-flex" method="post" action="/plot/${plot.id}">
                    <!-- <button type="button" class="btn btn-sm btn-primary">Edit</button> -->
                    <button type="submit" class="btn btn-sm btn-danger">Delete</button>
                </form>
              </td>
            `;
            plotTable.appendChild(plotRow);

            goToPopUp(plot.longitude, plot.latitude);
        })

        // Create summary table row
        areaSum = areaSum.toFixed(3);

        document.querySelector(".summary").innerHTML = `<div class="d-flex justify-content-between"><p class="mb-0">Suma: </p><p class="mb-0">${areaSum} ha</p></div>`;

    })
    .catch(error => console.error("Unable to get items.", error));
}
function showForm() {
    document.querySelector(".plotForm").classList.toggle("hidden");
}

</script>


    @if(message is not null){
        <div>@message</div>
    }
<section class="d-flex justify-content-center align-items-md-start m-2 gap-5 p-3" style="height: 100%">
    <div class="modalBackground hidden" style="position: absolute;
z-index: 1100;
background: white;
width: 100%;
height: 80%;
">
    <div style="position:relative; top: 50%; left: 50%;">
              <div class="modalForm">
              </div>
    </div>
  </div>
    @if (User?.Identity?.IsAuthenticated??false)
 {

     <div class="d-flex flex-column">

	<nav class="flex-column plotForm hidden">
		<div class="nav-item">
			<div >

				<form class="" method="post" action="/plot">

				<div class="form-group">
					<label for="city" class="text-black">Miejscowość</label>
					<input type="text" class="form-control" id="city" placeholder="Kraczkowa" name="City">
				</div>
				<div class="form-group">
					<label for="plotNumber" class="text-black">Numer działki</label>
					<input type="text" class="form-control" id="plotNumber" placeholder="3374/16" name="PlotNumber">
				</div>
				<div class="form-group">
					<label for="area" class="text-black">Powierzchnia (ha)</label>
					<input type="text" class="form-control" id="area" placeholder="0.55" name="Area">
				</div>
                <div class="form-group">
					<label for="area" class="text-black">Uprawa</label>
					<input type="text" class="form-control" id="tillage" placeholder="Pszenica" name="tillage">
				</div>
				<button type="submit" class="btn btn-primary my-2 align-self-center w-100" >Dodaj działkę</button>
				</form>
			</div>
		</div>
	</nav>
    <form class="form-inline d-flex">
    <input id="searchText" class="form-control mr-sm-2" type="search" placeholder="Search" aria-label="Search">
    <button type="button" id="searchButton" class="btn btn-outline-success my-2 my-sm-0">Search</button>
  </form>
  <div class="d-flex flex-column justify-content-between align-items-between" style="height: 100%;">
<table class="table table-hover table-dark m-0">
  <thead>
    <tr>
      <th scope="col">#</th>
      <th scope="col">Miejscowość</th>
      <th scope="col">Numer</th>
      <th scope="col">Powierzchnia</th>
      <th scope="col">Uprawa</th>
      <th scope="col">
                <a class="btn btn-secondary showFormButton px-1 py-0" onclick="showForm">Dodaj działkę</a>
      </th>
    </tr>
  </thead>
</table>
<div class="plotsList" style="max-height:700px; overflow:auto;" class="m-0">
    <table class="overflow-auto table table-hover table-dark  m-0">
  <tbody class="userPlots">
  </tbody>
</table>
</div>
<div class="summary bg-dark text-light p-2 m-0"></div>
</div>
</div>
}
<div>
    <div id="map"></div>
</div>
 @if (User?.Identity?.IsAuthenticated == false)
 {
     <h1>Aby rozpocząć zarządzanie swoimi działkami <a href="/login">zaloguj</a> lub <a href="/register">zarejestruj</a> się!</h1>
 }

 </section>
   
 @if (User?.Identity?.IsAuthenticated == true)
 {
     <script type="text/javascript">
        setTimeout(() => { getPlots(); }, 1000);
        document.querySelector(".showFormButton").addEventListener("click", showForm);
     </script>
 }


<style>
    #map{
        width: 800px;
        height: 800px;
    }
    .hidden{
        display:none;
    }
    td, th{
        text-align: center;
        cursor: pointer;
    }
    .plotsList::-webkit-scrollbar {
  display: none;
}

</style>

    <script>
document.querySelector("#searchButton").addEventListener("click", (() => getPlots(document.getElementById("searchText").value)));
document.querySelector("#searchText").addEventListener("change", (() => getPlots(document.getElementById("searchText").value)));
    </script>