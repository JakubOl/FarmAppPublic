@model Models.Dtos.PlotDto;
@{
    ViewData["Title"] = "Home Page";
    var message = ViewData["Message"] as string;
    var plots = ViewData["plots"] as List<PlotModel>;
}
<script>
let map;
let plots;
window.onload = async function() {
    initialize();
}
function goToPopUp(longitude, latitude) {
    map.setView([longitude, latitude], 18);
}
async function initialize() {
    map = new L.map('map').setView([50.041187, 21.999121], 18);
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        maxZoom: 19,
        attribution: '© OpenStreetMap'
    }).addTo(map);
}

async function getPlots(searchText){
    if(!searchText){
        searchText = "";
    }
    plots = await fetch(`/plots?searchText=${searchText}`).then(response => response.json()).then(data => { 
        let areaSum = 0;
        const plotTable = document.querySelector(".userPlots");
        plotTable.innerHTML = "";
        data.forEach(function(plot, idx) {
            // Create marker
            var marker = new L.marker([plot.longitude, plot.latitude])
            .bindPopup(`<div class="text-center">${plot.city} ${plot.plotNumber} <br> ${plot.tillage} <br> ${plot.area}ha</div>`).addTo(map);
            let plotArea = parseFloat(plot.area);


            if(plot.area === null){
                plot.area = 0;
            }

            if(plot.tillage === null){
                plot.tillage = "";
            }

            if(plotArea === null || isNaN(plotArea) === true || plotArea === undefined){
                plotArea = 0;
            }
            
            areaSum += plotArea;

            // Create table row with plot
            const plotRow = document.createElement("tr");
            plotRow.classList.add("plotListItemStyle");
            plotRow.addEventListener("click", (() => goToPopUp(plot.longitude, plot.latitude)));
            plotRow.innerHTML = `
              <th class="align-middle" scope="row">${idx + 1}</th>
              <td class="align-middle">${plot.city}</td>
              <td class="align-middle">${plot.plotNumber}</td>
              <td class="align-middle">${plot.area}</td>
              <td class="align-middle">${plot.tillage}</td>
              <td class="align-middle">
                <form class="d-flex justify-content-center" method="post" action="/plot/${plot.id}">
                    <a href="/plot/${plot.id}/edit" class="btn btn-sm btn-primary">Edit</a>
                    <button type="submit" class="btn btn-sm btn-danger">Delete</button>
                </form>
              </td>
            `;
            plotTable.appendChild(plotRow);
            goToPopUp(plot.longitude, plot.latitude);
        })
        // Create summary table row
        areaSum = areaSum.toFixed(3);
        document.querySelector(".summary").innerHTML = `<div class="d-flex justify-content-between border-bottom"><p class="mb-0">Suma: </p><p class="mb-0">${areaSum} ha</p></div>`;
    })
    .catch(error => console.error("Unable to get items.", error));
}
function showForm() {
    document.querySelector(".plotForm").classList.toggle("hidden");
}
</script>


    
<section class="d-flex justify-content-center align-items-md-start m-2 gap-5 p-3 w-100">

    @if (User?.Identity?.IsAuthenticated??false)
 {
    <div>

     <div class="d-flex flex-column overflow-hidden" style="height: 800px;">

	        <nav class="flex-column plotForm hidden">
		        <div class="nav-item">
			        <div >

				        <form class="" method="post" action="/plot">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

				        <div class="form-group">
					        <label for="city" class="text-white">Miejscowość</label>
					        <input type="text" class="form-control" id="city" placeholder="Kraczkowa" name="City" value="@Model?.City" >
                            <span asp-validation-for="City" class="text-danger"></span>
				        </div>
				        <div class="form-group">
					        <label for="plotNumber" class="text-white">Numer działki</label>
					        <input type="text" class="form-control" id="plotNumber" placeholder="3374/16" name="PlotNumber"  value="@Model?.PlotNumber">
                            <span asp-validation-for="PlotNumber" class="text-danger"></span>
				        </div>
				        <div class="form-group">
					        <label for="area" class="text-white">Powierzchnia (ha)</label>
					        <input type="text" class="form-control" id="area" placeholder="0.55" name="Area"  value="@Model?.Area">
                            <span asp-validation-for="Area" class="text-danger"></span>
				        </div>
                        <div class="form-group">
					        <label for="area" class="text-white">Uprawa</label>
					        <input type="text" class="form-control" id="tillage" placeholder="Pszenica" name="tillage"  value="@Model?.Tillage">
				        </div>
				        <button type="submit" class="btn btn-primary my-2 align-self-center w-100" >Dodaj działkę</button>
				        </form>
			        </div>
		        </div>
	        </nav>
            @if(message is not null){
        <div><h4 class="text-danger">@message</h4></div>
    }
            <form class="form-inline d-flex">
            <input id="searchText" class="form-control mr-sm-2" type="search" placeholder="Search" aria-label="Search">
            <button type="button" id="searchButton" class="btn btn-outline-success my-2 my-sm-0">Search</button>
          </form>
                  <div class="d-flex flex-column align-items-between bg-dark">
                        <div class="plotsList m-0" style="max-height:750px; overflow:auto;">
                            <table class="table table-hover table-dark m-0">
                              <thead>
                                <tr style="position:sticky; top: 0; z-index: 1;">
                                  <th scope="col">#</th>
                                  <th scope="col">Miejscowość</th>
                                  <th scope="col">Numer</th>
                                  <th scope="col">Powierzchnia(ha)</th>
                                  <th scope="col">Uprawa</th>
                                  <th scope="col">
                                            <a class="btn btn-secondary showFormButton px-1 py-0" onclick="showForm">Dodaj działkę</a>
                                  </th>
                                </tr>
                              </thead>
                                      <tbody class="userPlots overflow-scroll"></tbody>
                            </table>
                        </div>
                </div>
       </div>
        <div class="summary bg-dark text-light p-2 m-0"></div>
</div>
}
<div class="d-flex justify-content-center h-100 w-100">
    <div id="map"></div>
</div>
 @if (User?.Identity?.IsAuthenticated == false)
 {
     <h1 class="text-light">Aby rozpocząć zarządzanie swoimi działkami <a href="/login">zaloguj</a> lub <a href="/register">zarejestruj</a> się!</h1>
 }

 </section>
   
 @if (User?.Identity?.IsAuthenticated == true)
 {
     <script type="text/javascript">
        setTimeout(() => { getPlots(); }, 1000);
        document.querySelector(".showFormButton").addEventListener("click", showForm);
     </script>
 }


<style>
    #map{
        height: Calc(1px + 100%);
        width:  Calc(1px + 100%);
    }
    .hidden{
        display:none;
    }
    td, th{
        text-align: center;
        cursor: pointer;
    }
    .plotsList::-webkit-scrollbar {
  display: none;
}
</style>

    <script>
document.querySelector("#searchButton").addEventListener("click", (() => getPlots(document.getElementById("searchText").value)));
document.querySelector("#searchText").addEventListener("change", (() => getPlots(document.getElementById("searchText").value)));
    </script>